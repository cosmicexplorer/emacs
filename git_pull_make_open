#!/usr/bin/env zsh

set -euxo pipefail

EXPERIMENTAL_BRANCH='with-git-pull-make-script'

CONTAINING_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null && pwd)"

STDIO_TMP="$(mktemp -d)"
trap 'rm -rf "$STDIO_TMP"' EXIT

STDOUT_FILE="${STDIO_TMP}/stdout"
STDERR_FILE="${STDIO_TMP}/stderr"

DIE_ERROR_OUT_DIRNAME='die-error-out'

function die {
  # This says to use argument #1 if defined, but if not, use the
  # number 1.
  local -r exit_code="${1:-1}"

  cp -r "$STDIO_TMP" "./${DIE_ERROR_OUT_DIRNAME}/"

  echo "Emacs update script failed -- see the contents of ${DIE_ERROR_OUT_DIRNAME}." >&2

  exit "$exit_code"
}

PUSHD_OUTPUT_LOCATION='/dev/null'

function with-pushd {
  local -r dir="$1"
  local -a cmd=("${@:2}")

  pushd "$dir" 2> "$PUSHD_OUTPUT_LOCATION"

  "${cmd[@]}"

  popd 2> "$PUSHD_OUTPUT_LOCATION"
}

ORIGIN_REMOTE_NAME='origin'
UPSTREAM_REMOTE_NAME='upstream'
BASE_BRANCH='master'

function update-from-upstream {
  git checkout "$BASE_BRANCH" \
    && git pull "$UPSTREAM_REMOTE_NAME" "$BASE_BRANCH" \
    && git push "$ORIGIN_REMOTE_NAME" "$BASE_BRANCH"
}

function update-my-patchset {
  git checkout "$EXPERIMENTAL_BRANCH" \
      && git rebase "$BASE_BRANCH"
}

MAKE_JOBS='2'

function run-emacs-build {
  local -r make_goal="$1"

  if [[ ! -f './configure' ]]; then
    ./autogen.sh
  fi

  if [[ ! -f './Makefile' ]]; then
    ./configure
  fi

  make "$make_goal" "-j${MAKE_JOBS}"
}

function update-build-push {
  update-from-upstream \
    && update-my-patchset \
    && run-emacs-build test \
    && git push --force-with-lease "$ORIGIN_REMOTE_NAME" "$EXPERIMENTAL_BRANCH"
}

function wrap-stdio {
  local -a cmd=("$@")

  "${cmd[@]}" \
    > "$STDOUT_FILE" \
    2> "$STDERR_FILE"
}

function build-push-run {
  # Vaguely, if there are changes in the worktree (nonempty stdout).
  if [[ ! -z "$(git status -s)" ]]; then
    echo "CAN'T DO THIS WITH CHANGES -- SORRY!" >&2
    die
  fi

  wrap-stdio update-build-push \
      && wrap-stdio src/emacs &!
}


# Script is now executing.
with-pushd "$CONTAINING_DIR" \
           build-push-run \
  || die
